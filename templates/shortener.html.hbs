{{#> layout }}
  <div class="section container">
    <div class="row">
      <div class="col offset-m2 s12 m8">
        <h3>Shorten them Links!</h3>
        <form action="{{api}}/add" method="post">
            <div class="input-field my-3">
              <textarea id="url" name="url" type="url" class="materialize-textarea validate" placeholder=" "></textarea>
              <label for="url">Ugly URL</label>
            </div>
            <div class="switch">
              <label>
                Specify Name
                <input id="include-name" type="checkbox" checked onclick="hide_name(!this.checked)">
                <span class="lever"></span>
              </label>
            </div>
            <div id="name-input" class="input-field my-3">
              <input id="name" name="name" placeholder=" ">
              <label for="name">Name</label>
            </div>
            <div id="error" class="card-panel red lighten-2" hidden></div>
            <input class="btn my-3" type="submit" value="Shorten!">
        </form>
      </div>
    </div>
  </div>

  <!-- Modal Structure -->
  <div id="copy_url" class="modal" style="border-radius: 15px; width: 40%; min-width: 300px">
    <div class="modal-content">
      <h4>Here it is!</h4>
      <div class="row">
        <div class="input-field offset-m3 outlined s12 m5 my-4">
          <input id="final_url" type="text" placeholder=" " readonly/>
          <label for="final_url">Shortened URL</label>
        </div>
        <a class="suffix btn-flat s12 m1 mt-5 tooltipped" onclick="copy_text_in('final_url')" data-position="top" data-tooltip="Click to copy URL!">
          <i class="large material-icons">content_copy</i>
        </a>
      </div>
    </div>
    <div class="modal-footer">
      <a href="#!" class="modal-close btn">Close</a>
    </div>
  </div>

  <script>
    function form_callback(json, form, data) {
      if (!json.success) {
        show_form_errors(form, json.form_errors);
        if (json.allow_force) {
          if (window.confirm(json.error)) {
            data.force = true;
            send_req(form, data, form_callback);
          } else {
            return;
          }
        } else {
          throw Error(json.error);
        }
      }

      document.getElementById('final_url').value = json.url;
      const instance = M.Modal.getInstance(document.querySelector('.modal'));
      instance.open();

      reset_form(form);
    }

    function hide_name(value) {
      document.getElementById('name-input').hidden = value;
    }

    function validate(form, data) {
      if (data.url.length < 4 || data.url.substr(0, 4) !== 'http') {
        data.url = 'https://' + data.url;
      } else if (data.url.length > 4 && data.url.substr(0, 5) === 'http:') {
        if (window.confirm("The URL given is using HTTP! Should we change this to HTTPS?")) {
          data.url.replace(/^http/, 'https');
        }
      }

      const include_name = document.getElementById('include-name').checked;
      if (!include_name) {
        delete data.name;
      }

      return data;
    }

    hide_name(!document.getElementById('include-name').checked);
    init_form(document.querySelector('form'), form_callback, validate);
  </script>
{{/layout}}
